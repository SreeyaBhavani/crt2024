Given a string S(input consisting) of ‘’ and ‘#’. The length of the string is variable. The task is to find the minimum number of ‘’ or ‘#’ to make it a valid string. The string is considered valid if the number of ‘’ and ‘#’ are equal. The ‘’ and ‘#’ can be at any position in the string.

Input Format

Read a string

Constraints

string

Output Format

(>#): positive integer (#>): negative integer (#=*): 0

Sample Input 0

###***
Sample Output 0

0
Sample Input 1

**###*##*###
Sample Output 1

-4
================================================================
code:
================================================================
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {
    char str[50];
    scanf("%s",str);
    int a=0,b=0;
    for(int i=0;i<strlen(str);i++){
      if(str[i]=='#'){
          a++;
      }  
        else{
            b++;
        }
    }
    printf("%d",b-a);
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    return 0;
}
